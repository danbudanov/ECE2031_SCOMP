/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("|TOP_SCOMP|SCOMP:inst|STATE")
{
	VALUES = "STATE.RESET_PC", "STATE.FETCH", "STATE.DECODE", "STATE.EX_LOAD", "STATE.EX_STORE", "STATE.EX_STORE2", "STATE.EX_ADD", "STATE.EX_JUMP", "STATE.EX_AND", "STATE.EX_SUB", "STATE.EX_JNEG", "STATE.EX_JPOS", "STATE.EX_JZERO", "STATE.EX_OR", "STATE.EX_XOR", "STATE.EX_SHIFT", "STATE.EX_ADDI", "STATE.EX_CALL", "STATE.EX_RETURN";
}

SIGNAL("KEY[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLOCK_50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SCOMP_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MAR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MAR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("SCOMP:inst|STATE")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|TOP_SCOMP|SCOMP:inst|STATE";
}

SIGNAL("SCOMP:inst|MW")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("AC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AC[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("AC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC";
}

SIGNAL("PC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("PC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC";
}

SIGNAL("MDR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MDR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

SIGNAL("MDR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MDR";
}

TRANSITION_LIST("KEY[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 980.0;
	}
}

TRANSITION_LIST("CLOCK_50")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("SCOMP_CLK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 12.64;
		LEVEL 0 FOR 20.862;
		LEVEL X FOR 184.564;
		LEVEL 1 FOR 7.83;
		NODE
		{
			REPEAT = 46;
			LEVEL 0 FOR 8.4;
			LEVEL 1 FOR 8.4;
		}
		LEVEL 0 FOR 1.304;
	}
}

TRANSITION_LIST("MAR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("MAR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 304.675;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 33.6;
			LEVEL 0 FOR 16.8;
		}
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 168.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 33.6;
			LEVEL 0 FOR 16.8;
		}
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 124.125;
	}
}

TRANSITION_LIST("MAR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 304.016;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 33.6;
			LEVEL 0 FOR 16.8;
		}
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 168.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 33.6;
			LEVEL 0 FOR 16.8;
		}
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 124.784;
	}
}

TRANSITION_LIST("MAR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.696;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 50.4;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 33.6;
				LEVEL 1 FOR 16.8;
			}
			LEVEL 0 FOR 50.4;
			LEVEL 1 FOR 16.8;
			LEVEL 0 FOR 100.8;
		}
		LEVEL 1 FOR 7.104;
	}
}

TRANSITION_LIST("MAR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 353.925;
		LEVEL 1 FOR 0.303;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 33.6;
			LEVEL 1 FOR 16.8;
		}
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 201.297;
		LEVEL 1 FOR 0.303;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 33.6;
			LEVEL 1 FOR 16.8;
		}
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 108.172;
	}
}

TRANSITION_LIST("MAR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.525;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 33.505;
		LEVEL 1 FOR 16.463;
		LEVEL 0 FOR 50.832;
		LEVEL 1 FOR 33.505;
		LEVEL 0 FOR 16.463;
		LEVEL 1 FOR 67.632;
		LEVEL 0 FOR 49.968;
		LEVEL 1 FOR 0.337;
		LEVEL 0 FOR 50.495;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 33.505;
		LEVEL 1 FOR 16.463;
		LEVEL 0 FOR 50.832;
		LEVEL 1 FOR 33.505;
		LEVEL 0 FOR 16.463;
		LEVEL 1 FOR 67.632;
		LEVEL 0 FOR 49.968;
		LEVEL 1 FOR 0.337;
		LEVEL 0 FOR 50.495;
		LEVEL 1 FOR 7.275;
	}
}

TRANSITION_LIST("MAR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.373;
		LEVEL 1 FOR 0.304;
		LEVEL 0 FOR 50.096;
		LEVEL 1 FOR 0.304;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 16.496;
		LEVEL 0 FOR 0.352;
		LEVEL 1 FOR 33.552;
		LEVEL 0 FOR 16.496;
		LEVEL 1 FOR 0.352;
		LEVEL 0 FOR 33.552;
		LEVEL 1 FOR 16.496;
		LEVEL 0 FOR 0.352;
		LEVEL 1 FOR 50.352;
		LEVEL 0 FOR 16.496;
		LEVEL 1 FOR 0.352;
		LEVEL 0 FOR 33.552;
		LEVEL 1 FOR 16.496;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 0.304;
		LEVEL 0 FOR 50.096;
		LEVEL 1 FOR 0.304;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 16.496;
		LEVEL 0 FOR 0.352;
		LEVEL 1 FOR 33.552;
		LEVEL 0 FOR 16.496;
		LEVEL 1 FOR 0.352;
		LEVEL 0 FOR 33.552;
		LEVEL 1 FOR 16.496;
		LEVEL 0 FOR 0.352;
		LEVEL 1 FOR 50.352;
		LEVEL 0 FOR 16.496;
		LEVEL 1 FOR 0.352;
		LEVEL 0 FOR 33.552;
		LEVEL 1 FOR 16.496;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 0.304;
		LEVEL 0 FOR 7.123;
	}
}

TRANSITION_LIST("SCOMP:inst|STATE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL STATE.RESET_PC FOR 232.154;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_CALL FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_LOAD FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_AND FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_XOR FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_STORE FOR 16.796;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.EX_STORE2 FOR 16.796;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_RETURN FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_JUMP FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_CALL FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_LOAD FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_AND FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_XOR FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_STORE FOR 16.796;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.EX_STORE2 FOR 16.796;
		LEVEL Undefined FOR 0.004;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_RETURN FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 16.8;
		LEVEL STATE.EX_JUMP FOR 16.8;
		LEVEL STATE.FETCH FOR 16.8;
		LEVEL STATE.DECODE FOR 11.842;
	}
}

TRANSITION_LIST("SCOMP:inst|MW")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 484.154;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 352.8;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 129.446;
	}
}

TRANSITION_LIST("AC[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AC[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AC[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 437.712;
		LEVEL 1 FOR 268.8;
		LEVEL 0 FOR 100.8;
		LEVEL 1 FOR 192.688;
	}
}

TRANSITION_LIST("AC[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 437.718;
		LEVEL 1 FOR 268.8;
		LEVEL 0 FOR 100.8;
		LEVEL 1 FOR 192.682;
	}
}

TRANSITION_LIST("AC[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AC[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AC[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 437.539;
		LEVEL 1 FOR 268.8;
		LEVEL 0 FOR 100.8;
		LEVEL 1 FOR 192.861;
	}
}

TRANSITION_LIST("AC[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 437.473;
		LEVEL 1 FOR 268.8;
		LEVEL 0 FOR 100.8;
		LEVEL 1 FOR 192.927;
	}
}

TRANSITION_LIST("AC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336.818;
		LEVEL 1 FOR 663.182;
	}
}

TRANSITION_LIST("AC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 337.076;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 319.2;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 242.924;
	}
}

TRANSITION_LIST("AC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336.979;
		LEVEL 1 FOR 663.021;
	}
}

TRANSITION_LIST("AC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336.932;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 319.2;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 243.068;
	}
}

TRANSITION_LIST("AC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336.966;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 319.2;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 243.034;
	}
}

TRANSITION_LIST("AC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336.982;
		LEVEL 1 FOR 663.018;
	}
}

TRANSITION_LIST("AC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336.781;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 319.2;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 243.219;
	}
}

TRANSITION_LIST("AC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 336.998;
		LEVEL 1 FOR 663.002;
	}
}

TRANSITION_LIST("PC[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 286.479;
		LEVEL 1 FOR 268.8;
		LEVEL 0 FOR 100.8;
		LEVEL 1 FOR 268.8;
		LEVEL 0 FOR 75.121;
	}
}

TRANSITION_LIST("PC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 353.667;
		LEVEL 1 FOR 201.6;
		LEVEL 0 FOR 168.0;
		LEVEL 1 FOR 201.6;
		LEVEL 0 FOR 75.133;
	}
}

TRANSITION_LIST("PC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 286.448;
		LEVEL 1 FOR 67.2;
		LEVEL 0 FOR 100.8;
		LEVEL 1 FOR 100.8;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 67.2;
		LEVEL 0 FOR 100.8;
		LEVEL 1 FOR 100.8;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 24.752;
	}
}

TRANSITION_LIST("PC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.117;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 33.6;
			LEVEL 0 FOR 16.8;
			LEVEL 1 FOR 50.4;
			LEVEL 0 FOR 50.4;
			LEVEL 1 FOR 50.4;
			LEVEL 0 FOR 67.2;
			LEVEL 1 FOR 50.4;
			LEVEL 0 FOR 50.4;
		}
		LEVEL 1 FOR 7.683;
	}
}

TRANSITION_LIST("MDR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 365.332;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 336.0;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 231.468;
	}
}

TRANSITION_LIST("MDR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17.674;
		LEVEL 1 FOR 246.856;
		LEVEL 0 FOR 252.0;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 252.0;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 46.67;
	}
}

TRANSITION_LIST("MDR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 348.47;
		LEVEL 1 FOR 100.8;
		LEVEL 0 FOR 47.495;
		LEVEL 1 FOR 19.705;
		LEVEL 0 FOR 201.6;
		LEVEL 1 FOR 100.8;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 113.93;
	}
}

TRANSITION_LIST("MDR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 415.413;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 47.495;
		LEVEL 1 FOR 19.705;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 201.6;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 46.987;
	}
}

TRANSITION_LIST("MDR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 398.667;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 302.4;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 164.533;
	}
}

TRANSITION_LIST("MDR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 264.358;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 67.2;
		LEVEL 0 FOR 100.8;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 67.2;
		LEVEL 0 FOR 100.8;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 46.842;
	}
}

TRANSITION_LIST("MDR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 415.473;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 47.495;
		LEVEL 1 FOR 19.705;
		LEVEL 0 FOR 268.8;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 114.127;
	}
}

TRANSITION_LIST("MDR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 365.222;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 47.495;
		LEVEL 1 FOR 19.705;
		LEVEL 0 FOR 218.4;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 33.6;
			LEVEL 0 FOR 16.8;
		}
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 113.978;
	}
}

TRANSITION_LIST("MDR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 314.714;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 97.895;
		LEVEL 1 FOR 19.705;
		LEVEL 0 FOR 168.0;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 67.2;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 114.086;
	}
}

TRANSITION_LIST("MDR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 314.866;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 336.0;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 281.934;
	}
}

TRANSITION_LIST("MDR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 264.283;
		LEVEL 1 FOR 151.2;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 30.695;
		LEVEL 1 FOR 19.705;
		LEVEL 0 FOR 117.6;
		LEVEL 1 FOR 151.2;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 67.2;
		LEVEL 0 FOR 114.117;
	}
}

TRANSITION_LIST("MDR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 264.477;
		LEVEL 1 FOR 100.8;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 33.6;
			LEVEL 1 FOR 16.8;
		}
		LEVEL 0 FOR 168.0;
		LEVEL 1 FOR 100.8;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 33.6;
			LEVEL 1 FOR 16.8;
		}
		LEVEL 0 FOR 164.323;
	}
}

TRANSITION_LIST("MDR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17.396;
		LEVEL 1 FOR 246.856;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 184.8;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 184.8;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 46.948;
	}
}

TRANSITION_LIST("MDR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 314.952;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 97.895;
		LEVEL 1 FOR 19.705;
		LEVEL 0 FOR 168.0;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 67.2;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 113.848;
	}
}

TRANSITION_LIST("MDR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17.184;
		LEVEL 1 FOR 246.856;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 67.2;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 50.4;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 33.6;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 67.2;
		LEVEL 1 FOR 33.6;
		LEVEL 0 FOR 16.8;
		LEVEL 1 FOR 47.16;
	}
}

TRANSITION_LIST("MDR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 314.724;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 16.8;
		LEVEL 0 FOR 30.695;
		LEVEL 1 FOR 19.705;
		LEVEL 0 FOR 168.0;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 50.4;
		LEVEL 1 FOR 67.2;
		LEVEL 0 FOR 114.076;
	}
}

DISPLAY_LINE
{
	CHANNEL = "KEY[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK_50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "PC[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "MDR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "MDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "AC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "AC[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|STATE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MAR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
	CHILDREN = 50, 51, 52, 53, 54, 55, 56, 57, 58, 59;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MW";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
