\relax 
\@writefile{lol}{\contentsline {lstlisting}{example.mif}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Machine code stored in source file $EXAMPLE.MIF$ created using the Simple Computer assembler. These instructions are executed on the $SCOMP$ and are used to compute $A = (B+C) + D$.\relax }}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Timing simulation waveform of instructions stored in $EXAMPLE.MIF$ being executed on $SCOMP$. A 1 us period is used, and $RESETN$ is initially held $LOW$ to reset the computer. Once the reset signal is pulled $HIGH$, a $FETCH$ and $DECODE$ cycle is performed to load the next instruction, $EX\_LOAD$.\relax }}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Timing simulation waveform of $SCOMP$, now with an extended number of instruction states, executing instructions stored in $TEST\_CODE.MIF$. The clock frequency is set to 1 us, and the $RESETN$ line is initially held $LOW$ to reset the computer. The $AC$ register ultimately retains the value 0x0F0F.\relax }}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Schematic of Simple Computer with a PLL being input a 50 MHz clock from the $DE2$ board and supplying a clock signal at 61.90 MHZ. This clock output frequency is within 5 MHz of the 65.03 MHz operating maximum of $SCOMP$, as given by the Timing Summary. $KEY[0]$ is used to reset both the PLL and the $SCOMP$, and the PLL output is routed to a physical pin $J22$ on the FPGA.\relax }}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Oscilloscope waveform of the clock signal being output by the PLL into the $SCOMP$. A 16.18 ns clock period is measured.\relax }}{}}
