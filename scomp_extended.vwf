/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 300.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("KEY[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLOCK_50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SCOMP_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MAR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MAR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("MAR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MAR";
}

SIGNAL("SCOMP:inst|PC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("SCOMP:inst|PC[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|PC";
}

SIGNAL("SCOMP:inst|PC[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|PC";
}

SIGNAL("SCOMP:inst|PC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|PC";
}

SIGNAL("SCOMP:inst|PC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|PC";
}

SIGNAL("SCOMP:inst|PC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|PC";
}

SIGNAL("SCOMP:inst|PC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|PC";
}

SIGNAL("SCOMP:inst|PC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|PC";
}

SIGNAL("SCOMP:inst|PC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|PC";
}

SIGNAL("SCOMP:inst|PC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|PC";
}

SIGNAL("SCOMP:inst|PC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|PC";
}

SIGNAL("SCOMP:inst|AC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("SCOMP:inst|AC[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|AC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "SCOMP:inst|AC";
}

SIGNAL("SCOMP:inst|STATE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
}

SIGNAL("SCOMP:inst|MDR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("SCOMP:inst|MDR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MDR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "SCOMP:inst|MDR";
}

SIGNAL("SCOMP:inst|MW")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

TRANSITION_LIST("KEY[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 280.0;
	}
}

TRANSITION_LIST("CLOCK_50")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("SCOMP_CLK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("MAR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("MAR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("MAR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("MAR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("MAR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("MAR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("MAR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("MAR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("MAR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("MAR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|PC[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|PC[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|PC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|PC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|PC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|PC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|PC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|PC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|PC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|PC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|AC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|STATE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MDR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

TRANSITION_LIST("SCOMP:inst|MW")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 300.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "KEY[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK_50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|PC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|AC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|STATE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MAR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
	CHILDREN = 50, 51, 52, 53, 54, 55, 56, 57, 58, 59;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "MAR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "SCOMP:inst|MW";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 28100;
	MASTER = TRUE;
}
;
